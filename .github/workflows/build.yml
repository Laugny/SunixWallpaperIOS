name: build-ios
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true   # Submodule vendor/geode wirklich auschecken

      - name: Install Geode CLI
        run: brew install geode-sdk/geode/geode-cli

      # GEODE_SDK korrekt (mit Expansion) für alle folgenden Steps setzen
      - name: Export GEODE_SDK
        shell: bash
        run: echo "GEODE_SDK=${GITHUB_WORKSPACE}/vendor/geode" >> "$GITHUB_ENV"

      # optional, aber hilfreich: CLI-internen Pfad auch setzen (kein Muss)
      - name: Tell Geode CLI about SDK (optional)
        run: geode sdk set-path "${GITHUB_WORKSPACE}/vendor/geode"

      # prüfen, dass das Submodule wirklich da ist und die erwartete Datei existiert
      - name: Verify SDK layout
        shell: bash
        run: |
          echo "GEODE_SDK=$GEODE_SDK"
          ls -la "$GEODE_SDK"
          test -f "$GEODE_SDK/cmake/GeodeFile.cmake" || { echo "GeodeFile.cmake fehlt!"; exit 1; }

      - name: Add dummy Geode profile
        run: geode profile add --name "CI Profile" "/tmp" mac

      - name: Install iOS loader binaries
        run: geode sdk install-binaries --platform ios

      - name: Export GEODE_SDK
        run: echo "GEODE_SDK=${GITHUB_WORKSPACE}/vendor/geode" >> $GITHUB_ENV

      - name: Configure (Xcode for iOS)
        env:
          GEODE_SDK: ${{ env.GEODE_SDK }}
        run: |
          cmake -S . -B build-ios -G Xcode \
            -DGEODE_TARGET_PLATFORM=iOS \
            -DCMAKE_SYSTEM_NAME=iOS \
            -DCMAKE_OSX_SYSROOT=iphoneos \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0 \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo


      - name: Build
        run: cmake --build build-ios --config RelWithDebInfo

      - name: Upload .geode
        uses: actions/upload-artifact@v4
        with:
          name: geode-ios
          path: build-ios/bin/*.geode
